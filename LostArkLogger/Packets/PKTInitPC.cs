using System;
using System.Collections.Generic;
namespace LostArkLogger
{
    public class PKTInitPC
    {
        public PKTInitPC(BitReader reader)
        {
            field0 = reader.ReadByte();
            field1 = reader.ReadList<Byte[]>(30);
            field2 = reader.ReadByte();
            Name = reader.ReadString();
            field4 = reader.ReadUInt32();
            field5 = reader.ReadByte();
            field6 = reader.ReadByte();
            field7 = reader.ReadList<UInt16>();
            field8 = reader.ReadUInt16();
            field9 = reader.ReadByte();
            field10 = reader.ReadUInt64();
            pKTNewNpc_1_4_1s = reader.ReadList<PKTNewNpc_1_4_1>();
            field12 = reader.ReadByte();
            ClassId = reader.ReadUInt16();
            field14 = reader.ReadByte();
            hasfield15 = reader.ReadByte();
            if (hasfield15 == 1)
                field15 = reader.ReadUInt32();
            GearLevel = reader.ReadUInt32();
            field17 = reader.ReadUInt64();
            field18 = reader.ReadUInt32();
            field19 = reader.ReadUInt32();
            field20 = reader.ReadUInt32();
            field21 = reader.ReadUInt32();
            field22 = reader.ReadUInt32();
            field23 = reader.ReadByte();
            statusEffectDatas = reader.ReadList<StatusEffectData>();
            field25 = reader.ReadUInt32();
            field26 = reader.ReadUInt16();
            field27 = reader.ReadByte();
            PlayerId = reader.ReadUInt64();
            field29 = reader.ReadUInt32();
            field30 = reader.ReadByte();
            field31 = reader.ReadBytes(35);
            field32 = reader.ReadByte();
            field33 = reader.ReadByte();
            field34 = reader.ReadList<Byte>();
            field35 = reader.ReadUInt64();
            statPair = reader.Read<StatPair>();
            field37 = reader.ReadUInt32();
            field38 = reader.ReadUInt16();
            field39 = reader.ReadByte();
            field40 = reader.ReadUInt32();
            field41 = reader.ReadUInt16();
            field42 = reader.ReadByte();
            field43 = reader.ReadBytes(25);
            field44 = reader.ReadUInt32();
            field45 = reader.ReadByte();
            byteArr0 = reader.ReadBytes(9);
            Level = reader.ReadUInt16();
            byteArr1 = reader.ReadBytes(101);
            field47 = reader.ReadByte();
            field48 = reader.ReadByte();
            field49 = reader.ReadUInt16();
            field50 = reader.ReadByte();
            field51 = reader.ReadByte();
        }
        public Byte field0;
        public List<Byte[]> field1;
        public Byte field2;
        public String Name;
        public UInt32 field4;
        public Byte field5;
        public Byte field6;
        public List<UInt16> field7;
        public UInt16 field8;
        public Byte field9;
        public UInt64 field10;
        public List<PKTNewNpc_1_4_1> pKTNewNpc_1_4_1s;
        public Byte field12;
        public UInt16 ClassId;
        public Byte field14;
        public Byte hasfield15;
        public UInt32 field15;
        public UInt32 GearLevel;
        public UInt64 field17;
        public UInt32 field18;
        public UInt32 field19;
        public UInt32 field20;
        public UInt32 field21;
        public UInt32 field22;
        public Byte field23;
        public List<StatusEffectData> statusEffectDatas;
        public UInt32 field25;
        public UInt16 field26;
        public Byte field27;
        public UInt64 PlayerId;
        public UInt32 field29;
        public Byte field30;
        public Byte[] field31;
        public Byte field32;
        public Byte field33;
        public List<Byte> field34;
        public UInt64 field35;
        public StatPair statPair;
        public UInt32 field37;
        public UInt16 field38;
        public Byte field39;
        public UInt32 field40;
        public UInt16 field41;
        public Byte field42;
        public Byte[] field43;
        public UInt32 field44;
        public Byte field45;
        public Byte[] byteArr0;
        public UInt16 Level;
        public Byte[] byteArr1;
        public Byte field47;
        public Byte field48;
        public UInt16 field49;
        public Byte field50;
        public Byte field51;
    }
}
